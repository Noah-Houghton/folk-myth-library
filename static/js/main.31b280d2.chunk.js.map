{"version":3,"sources":["logo.svg","utils.ts","ResetFilter.tsx","SimpleTable.tsx","FilterField.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","arrayContainsPartialString","arr","str","contains","a","includes","ResetFilter","props","onClick","useStyles","makeStyles","table","minWidth","bookToRow","book","TableRow","TableCell","Title","Author","Shelf","Publisher","Translator","Volume","Region","Type","Published","Copies","Tags","Language","Editor","SimpleTable","classes","loading","data","length","rows","push","headers","target","text","map","index","arrow","active","ascending","fontSize","Tooltip","title","handler","headerCell","activeHeaderIndex","TableContainer","component","Paper","Table","className","aria-label","TableHead","key","TableBody","FilterField","placeholder","id","type","onChange","App","state","allBooks","filteredBooks","searchTerm","filters","sortAscending","$","val","this","setState","filter","csv","then","response","books","forEach","item","trim","split","author","tag","editor","filterBooks","loadBooks","column","Object","keys","indexOf","sort","b","reset","removeFilter","bind","src","logo","alt","sortByColumn","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31b280d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export function arrayContainsPartialString(arr: string[], str: string) {\r\n  let contains = false;\r\n  for (let a of arr) {\r\n    contains = contains || a.includes(str);\r\n  }\r\n  return contains;\r\n}\r\n","import React from \"react\";\r\n\r\nexport function ResetFilter(props: { onClick: () => void }) {\r\n  return <button onClick={props.onClick}>Reset Filters</button>;\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { TableData } from \"./Types\";\r\n\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nimport \"./SimpleTable.css\";\r\n\r\nimport { Book } from \"./Types\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\ntype headerData = {\r\n  target: keyof Book;\r\n  text: string;\r\n};\r\n\r\nfunction headerCell(props: {\r\n  handler: () => void;\r\n  text: string;\r\n  active: boolean;\r\n  ascending: boolean;\r\n}) {\r\n  const arrow = props.active ? (\r\n    props.ascending ? (\r\n      <ArrowDownwardIcon fontSize=\"small\"></ArrowDownwardIcon>\r\n    ) : (\r\n      <ArrowUpwardIcon fontSize=\"small\"></ArrowUpwardIcon>\r\n    )\r\n  ) : (\r\n    \"\"\r\n  );\r\n  return (\r\n    <Tooltip\r\n      title={\r\n        props.active\r\n          ? \"Sorting \" + (props.ascending ? \"Ascending\" : \"Descending\")\r\n          : \"Click to sort by this column\"\r\n      }\r\n    >\r\n      <TableCell onClick={props.handler}>\r\n        {props.text} {arrow}\r\n      </TableCell>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nfunction bookToRow(book: Book) {\r\n  return (\r\n    <TableRow>\r\n      <TableCell>{book.Title}</TableCell>\r\n      <TableCell>{book.Author}</TableCell>\r\n      <TableCell>{book.Shelf}</TableCell>\r\n      <TableCell>{book.Publisher}</TableCell>\r\n      <TableCell>{book.Translator}</TableCell>\r\n      <TableCell>{book.Volume}</TableCell>\r\n      <TableCell>{book.Region}</TableCell>\r\n      <TableCell>{book.Type}</TableCell>\r\n      <TableCell>{book.Published}</TableCell>\r\n      <TableCell>{book.Copies}</TableCell>\r\n      <TableCell>{book.Tags}</TableCell>\r\n      <TableCell>{book.Language}</TableCell>\r\n      <TableCell>{book.Editor}</TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nexport function SimpleTable(props: TableData) {\r\n  const classes = useStyles();\r\n  if (props.loading) {\r\n    return <p>Loading...</p>;\r\n  } else if (props.data.length <= 0) {\r\n    return <p>No books found matching your search.</p>;\r\n  }\r\n  const rows = [];\r\n  for (let book of props.data) {\r\n    rows.push(bookToRow(book));\r\n  }\r\n  let titles = [\r\n    { target: \"Title\", text: \"Title\" },\r\n    { target: \"Author\", text: \"Author\" },\r\n    { target: \"Shelf\", text: \"Shelf Location\" },\r\n    { target: \"Publisher\", text: \"Publisher\" },\r\n    { target: \"Translator\", text: \"Translator\" },\r\n    { target: \"Volume\", text: \"Volume\" },\r\n    { target: \"Region\", text: \"Region\" },\r\n    { target: \"Type\", text: \"Type\" },\r\n    { target: \"Published\", text: \"Published\" },\r\n    { target: \"Copies\", text: \"Copies\" },\r\n    { target: \"Tags\", text: \"Tags\" },\r\n    { target: \"Language\", text: \"Language\" },\r\n    { target: \"Editor\", text: \"Editor\" },\r\n  ] as headerData[];\r\n  let headers = titles.map((data: headerData, index: number) =>\r\n    headerCell({\r\n      handler: props.onClick(data.target),\r\n      text: data.text,\r\n      active: index === props.activeHeaderIndex,\r\n      ascending: props.ascending,\r\n    })\r\n  );\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow className=\"header\" key=\"Columns\">\r\n            {headers || \"\"}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>{rows || \"\"}</TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./FilterField.css\";\r\n\r\nexport function FilterField(props: { handler: () => void }) {\r\n  return (\r\n    <div className=\"filter\">\r\n      <input\r\n        placeholder=\"Enter a term to filter the library\"\r\n        id=\"searchTerm\"\r\n        type=\"text\"\r\n        onChange={props.handler}\r\n      ></input>\r\n      <button onClick={props.handler}>Filter</button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { csv } from \"d3-fetch\";\nimport $ from \"jquery\";\n\nimport { arrayContainsPartialString } from \"./utils\";\n\nimport { LibraryState, Book, RawBookData } from \"./Types\";\n\nimport { ResetFilter } from \"./ResetFilter\";\nimport { SimpleTable } from \"./SimpleTable\";\nimport { FilterField } from \"./FilterField\";\n\nclass App extends React.Component<{}, LibraryState> {\n  filterBooks() {\n    const searchTerm = ($(\"#searchTerm\").val() || \"\") as string;\n    this.setState({\n      filteredBooks: this.state.allBooks.filter((book: Book) => {\n        return searchTerm !== \"\"\n          ? book.Title.includes(searchTerm) ||\n              arrayContainsPartialString(book.Author, searchTerm) ||\n              arrayContainsPartialString(book.Editor, searchTerm) ||\n              arrayContainsPartialString(book.Tags, searchTerm)\n          : this.state.allBooks;\n      }),\n      searchTerm,\n      filters: this.state.filters,\n    } as LibraryState);\n  }\n  loadBooks() {\n    this.setState({ loading: true });\n    let promise = csv(\n      \"https://docs.google.com/spreadsheets/d/e/2PACX-1vT2v2Ka1L9i28QBUQq_-GgZtcHO6UGHw6M5Po7GxGd5Iczn0dyhhIJMFO82PbZUWpd9xjqx4wzhCoEF/pub?gid=0&single=true&output=csv\"\n    );\n    promise.then(response => {\n      let bookData = (response as unknown) as RawBookData[];\n      let books: Book[] = [];\n      bookData.forEach((item: RawBookData) => {\n        let book: Book = {\n          Title: item.Title.trim(),\n          Author: item.Author.split(\",\").map((author: string) => author.trim()),\n          Shelf: item.Shelf.trim(),\n          Publisher: item.Publisher.trim(),\n          Translator: item.Translator.trim(),\n          Volume: +item.Volume,\n          Region: item.Region.trim(),\n          Type: item.Type.trim(),\n          Published: +item.Published,\n          Copies: +item.Copies,\n          Tags: item.Tags.split(\",\").map((tag: string) => tag.trim()),\n          Language: item.Language.trim(),\n          Editor: item.Editor.split(\",\").map((editor: string) => editor.trim()),\n        };\n        books.push(book);\n      });\n      this.setState({ allBooks: books, loading: false });\n      this.filterBooks();\n    });\n  }\n  constructor(props: Object) {\n    super(props);\n    this.state = {\n      loading: true,\n      allBooks: [],\n      filteredBooks: [],\n      searchTerm: \"\",\n      filters: null,\n      activeHeaderIndex: -1,\n      sortAscending: true,\n    };\n  }\n  componentDidMount() {\n    this.loadBooks();\n  }\n  sortByColumn(column: keyof Book) {\n    return () => {\n      this.setState({\n        activeHeaderIndex: Object.keys(this.state.allBooks[0]).indexOf(column),\n        filteredBooks: this.state.filteredBooks.sort((a: Book, b: Book) => {\n          return (this.state.sortAscending\n          ? a[column] < b[column]\n          : a[column] > b[column])\n            ? 1\n            : -1;\n        }),\n        sortAscending: !this.state.sortAscending,\n      });\n    };\n  }\n  removeFilter() {\n    $(\"#searchTerm\").val(\"\");\n    this.setState({\n      filteredBooks: this.state.allBooks,\n      searchTerm: \"\",\n      filters: null,\n    });\n  }\n  render() {\n    const books = this.state.filteredBooks;\n    const hasFiltered = this.state.searchTerm || this.state.filters;\n    const reset = hasFiltered ? (\n      <ResetFilter onClick={this.removeFilter.bind(this)}></ResetFilter>\n    ) : (\n      \"\"\n    );\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>The Folklore and Mythology Library</h1>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h2>\"To Vincent, Who Shared the Quest\"</h2>\n          <p>&mdash; Esther Casier-Quinn</p>\n        </header>\n        <FilterField handler={this.filterBooks.bind(this)} />\n        {reset}\n        <SimpleTable\n          loading={this.state.loading}\n          ascending={this.state.sortAscending}\n          activeHeaderIndex={this.state.activeHeaderIndex}\n          onClick={this.sortByColumn.bind(this)}\n          data={books}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}